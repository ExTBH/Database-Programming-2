<?php 

require_once __DIR__ . '/../../../models/ChargePoint.php';

$AllChargePoints = ChargePoint::getAll();


?>
<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fs-4 fw-bold mb-0">Manage Charge Points</h2>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addChargePointModal">
        <i class="fa-solid fa-plus me-2"></i>Add Charge Point
    </button>
</div>

<!-- Search & Filter -->
<div class="row mb-4">
    <div class="col-md-6">
        <div class="input-group">
            <span class="input-group-text bg-light text-success">
                <i class="fa-solid fa-magnifying-glass"></i>
            </span>
            <input type="text" id="searchChargePoints" class="form-control" placeholder="Search charge points...">
        </div>
    </div>
    <div class="col-md-3">
        <select class="form-select" id="statusFilter">
            <option value="">All Statuses</option>
            <option value="available">Available</option>
            <option value="in-use">In Use</option>
            <option value="maintenance">Maintenance</option>
        </select>
    </div>
</div>

<!-- Charge Points Table -->
<div class="table-responsive">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Location</th>
                <th>Owner</th>
                <th>Price/kWh</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

        <?php foreach ($AllChargePoints as $ChargePoint): ?>

            <tr>
                <td>#<?= htmlspecialchars($ChargePoint->charge_point_id) ?></td>
                <td><?= htmlspecialchars($ChargePoint-> address) ?></td>
                <?php 
                $homeowner = ChargePoint::getHomeownerByChargePointId($ChargePoint->charge_point_id); 
                ?>
                <td>
                <?php if ($homeowner): ?>
                <?= htmlspecialchars($homeowner['first_name'] . ' ' . $homeowner['last_name']) ?>
                <?php else: ?>
                <span class="text-muted">No Owner</span>
                <?php endif; ?>
                </td>              
                <td><?= htmlspecialchars($ChargePoint->price_per_kwh) ?></td>
                <td>
                    <span class="badge <?= $ChargePoint->is_available ? 'bg-success' : 'bg-secondary' ?>">
                        <?= $ChargePoint->is_available ? 'Available' : 'Not Available' ?>
                    </span>
                </td>
                <td>
                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editChargePointModal-<?= $ChargePoint->charge_point_id ?>">
                        <i class="fa-solid fa-edit"></i>
                    </button>
                    <button class="btn btn-danger btn-sm delete-charge-point" data-charge-point-id="<?= $ChargePoint->charge_point_id ?>">
                        <i class="fa-solid fa-trash"></i>
                    </button>
                </td>
            </tr>
            <?php endforeach; ?>

        </tbody>
    </table>
</div>

<!-- Add Charge Point Modal -->
<div class="modal fade" id="addChargePointModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
    
<form id="addChargePointForm" method="post" action="<?=PREFIX?>/admin.php" enctype="multipart/form-data">
    <input type="hidden" name="form_id" value="addChargePointForm">
    <div class="modal-header">
        <h5 class="modal-title">Add New Charge Point</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
    </div>
    <div class="modal-body">
        <div class="mb-3">
            <label class="form-label">Location Address</label>
            <input type="text" name="location" class="form-control" required>
            <div class="invalid-feedback">Please provide a location address.</div>
        </div>
        <div class="mb-3">
            <label class="form-label">Postcode</label>
            <input type="text" name="postcode" class="form-control" required>
        </div>
        <div class="mb-3">
            <label class="form-label">Latitude</label>
            <input type="number" name="latitude" step="0.000001" class="form-control" required>
        </div>
        <div class="mb-3">
            <label class="form-label">Longitude</label>
            <input type="number" name="longitude" step="0.000001" class="form-control" required>
        </div>
        <div class="mb-3">
            <label class="form-label">Price per kWh (BHD)</label>
            <input type="number" name="price_per_kwh" step="0.001" class="form-control" required>
        </div>
        <div class="mb-3">
            <label class="form-label">Homeowner Email</label>
            <input type="email" name="homeowner_email" class="form-control" required>
            <div class="invalid-feedback">This user does not exist or is not a homeowner.</div>
        </div>
        <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea name="description" class="form-control" rows="3"></textarea>
        </div>
        <div class="mb-3">
            <label class="form-label">Attach Image</label>
            <input type="file" name="image" class="form-control" accept="image/*">
        </div>
        <div class="form-check mb-3">
            <input type="checkbox" name="is_available" class="form-check-input" id="isAvailable">
            <label class="form-check-label" for="isAvailable">Is Available</label>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-success">Add Charge Point</button>
    </div>
</form>
        </div>
    </div>
</div>

<script>
    document.getElementById('searchChargePoints').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const tableRows = document.querySelectorAll('table tbody tr');
        
        tableRows.forEach(row => {
            const location = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            const owner = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
            const matches = location.includes(searchTerm) || owner.includes(searchTerm);
            row.style.display = matches ? '' : 'none';
        });
    });

    document.getElementById('statusFilter').addEventListener('change', function() {
        const selectedStatus = this.value.toLowerCase();
        const tableRows = document.querySelectorAll('table tbody tr');
        
        tableRows.forEach(row => {
            const status = row.querySelector('td:nth-child(5) span').textContent.toLowerCase();
            if (selectedStatus === '' || status === selectedStatus) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

   document.getElementById('addChargePointForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    // Validate required fields
    const requiredFields = this.querySelectorAll('[required]');
    let isValid = true;

    requiredFields.forEach(field => {
        if (!field.value.trim()) {
            field.classList.add('is-invalid');
            isValid = false;
        } else {
            field.classList.remove('is-invalid');
        }
    });

    // Validate the image field
    const imageField = this.querySelector('[name="image"]');
    if (imageField && !imageField.files.length) {
        imageField.classList.add('is-invalid');
        isValid = false;
    } else {
        imageField.classList.remove('is-invalid');
    }

    // Validate the checkbox
    const checkboxField = this.querySelector('[name="is_available"]');
    if (checkboxField && !checkboxField.checked) {
        checkboxField.classList.add('is-invalid');
        isValid = false;
    } else {
        checkboxField.classList.remove('is-invalid');
    }

    if (!isValid) {
        alert('Please fill in all required fields, attach an image, and check the availability box.');
        return;
    }

    const formData = new FormData(this);
    console.log([...formData.entries()]); // Log form data to ensure all fields are being sent

    try {
        console.log('Submitting form...'); // Log when the form is being submitted
        const response = await fetch(this.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        });

        // Await the response text to log it
        const responseText = await response.text();
        console.log('Response received:', responseText); // Log the raw response text

        // Parse the response as JSON
        const data = JSON.parse(responseText);

        console.log(data); // Log the parsed JSON data

        if (data.success) {
            alert(data.message);
            const modal = bootstrap.Modal.getInstance(document.getElementById('addChargePointModal'));
            modal.hide();
            this.reset();
            window.location.reload();
        } else {
            alert(data.message || 'An error occurred while adding the charge point.');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while submitting the form.');
    }
});

document.querySelector('[name="homeowner_email"]').addEventListener('blur', async function () {
    const emailField = this;
    const email = emailField.value.trim();

    if (!email) {
        emailField.classList.remove('is-valid', 'is-invalid');
        return;
    }

    try {
        const formData = new FormData();
        formData.append('form_id', 'validateHomeownerEmail');
        formData.append('email', email);

        const response = await fetch('<?=PREFIX?>/admin.php', {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        });

        const data = await response.json();

        if (data.success) {
            emailField.classList.remove('is-invalid');
            emailField.classList.add('is-valid');
            emailField.nextElementSibling.textContent = ''; // Clear error message
        } else {
            emailField.classList.remove('is-valid');
            emailField.classList.add('is-invalid');
            emailField.nextElementSibling.textContent = data.message; // Show error message
        }
    } catch (error) {
        console.error('Error validating email:', error);
        emailField.classList.remove('is-valid');
        emailField.classList.add('is-invalid');
        emailField.nextElementSibling.textContent = 'An error occurred while validating the email.';
    }
});

    document.querySelectorAll('.delete-charge-point').forEach(button => {
    button.addEventListener('click', async function () {
        const chargePointId = this.getAttribute('data-charge-point-id');

        if (confirm('Are you sure you want to delete this charge point?')) {
            try {
                const formData = new FormData();
                formData.append('form_id', 'deleteChargePoint');
                formData.append('charge_point_id', chargePointId);

                const response = await fetch('<?=PREFIX?>/admin.php', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                const data = await response.json();
                console.log(response.text());

                if (data.success) {
                    alert(data.message);
                    // Remove the row from the table
                    this.closest('tr').remove();
                } else {
                    alert(data.message || 'Failed to delete charge point.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while deleting the charge point.');
            }
        }
    });

    
});
</script>