<?php 

require_once __DIR__ . '/../../../models/User.php';
require_once __DIR__ . '/../../../admin.php';

$users = User::getAll();

//echo $users[0]->email; //test 
?>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fs-4 fw-bold mb-0">Manage User Accounts</h2>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addUserModal">
        <i class="fa-solid fa-user-plus me-2"></i>Add User
    </button>
</div>

<!-- Users Table -->
<div class="table-responsive">
      
    <table class="table table-bordered" id="usersTable">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($users as $user): ?>
                <tr>
                    <td>#<?= htmlspecialchars($user->id) ?></td>
                    <td><?=  htmlspecialchars($user->firstName . ' ' . $user->lastName) ?></td>
                    <td><?=  htmlspecialchars($user->email) ?></td>
                    <td>
                        <?php
                        $roleClass = match($user->role) {
                            'admin' => 'bg-primary',
                            'homeowner' => 'bg-success',
                            default => 'bg-secondary'
                        };
                        ?>
                        <span class="badge <?= $roleClass ?>">
                            <?= ucfirst(htmlspecialchars($user->role)) ?>
                        </span>
                    </td>
                
                    <td>
                        <div class="btn-group btn-group-sm">
                     
                            <button type="button" class="btn btn-outline-primary" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#editUserModal"
                                    data-user-id="<?= htmlspecialchars($user->id) ?>"
                                    data-first-name="<?= htmlspecialchars($user->firstName) ?>"
                                    data-last-name="<?= htmlspecialchars($user->lastName) ?>"
                                    data-email="<?= htmlspecialchars($user->email) ?>"
                                    data-role="<?= htmlspecialchars($user->role) ?>"
                                    title="Edit">
                                <i class="fa-solid fa-edit"></i>
                            </button>   
                            <button type="button" class="btn btn-outline-warning" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#resetPasswordModal"
                                    data-user-id="<?= htmlspecialchars($user->id) ?>"
                                    title="Reset Password">
                                <i class="fa-solid fa-key"></i>
                            </button>
                            <button type="button" class="btn btn-outline-danger" title="Suspend">
                                <i class="fa-solid fa-ban"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addUserForm" action="<?=PREFIX?>/admin.php" method="POST">
                <input type="hidden" name="form_id" value="addUserForm">
                <div class="modal-header">
                    <h5 class="modal-title">Add New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" name="first_name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" name="last_name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="email" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" name="password" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Role</label>
                        <select name="role" class="form-select" required>
                            <option value="">Select Role</option>
                            <option value="admin">Admin</option>
                            <option value="homeowner">Homeowner</option>
                            <option value="user">User</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Add User</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
 
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editUserForm" action="<?=PREFIX?>/admin.php" method="POST">
                <input type="hidden" name="form_id" value="editUserForm">
                <input type="hidden" name="user_id" id="edit_user_id">
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" name="first_name" id="edit_first_name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" name="last_name" id="edit_last_name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="email" id="edit_email" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Role</label>
                        <select name="role" id="edit_role" class="form-select" required>
                            <option value="">Select Role</option>
                            <option value="admin">Admin</option>
                            <option value="homeowner">Homeowner</option>
                            <option value="user">User</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="resetPasswordForm" action="<?=PREFIX?>/admin.php" method="POST">
                <input type="hidden" name="form_id" value="resetPasswordForm">
                <input type="hidden" name="user_id" id="reset_user_id">
                <div class="modal-header">
                    <h5 class="modal-title">Reset Password</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <input type="password" name="new_password" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm Password</label>
                        <input type="password" name="confirm_password" class="form-control" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Reset Password</button>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
document.addEventListener('DOMContentLoaded', function() {
    // Generic form submission handler
    function handleFormSubmit(formElement, modalId) {
        formElement.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                // For reset password form, validate passwords match
                if (formElement.id === 'resetPasswordForm') {
                    //const userId = formElement.querySelector('[name="user_id"]').value;
                    const newPassword = formElement.querySelector('[name="new_password"]').value;
                    const confirmPassword = formElement.querySelector('[name="confirm_password"]').value;
                    
             
                    if (newPassword !== confirmPassword) {
                        alert('Passwords do not match');
                        return;
                    }
                }

                const formData = new FormData(this);
                const response = await fetch(this.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                
                if (data.success) {
                    // Close modal first
                    const modal = bootstrap.Modal.getInstance(document.getElementById(modalId));
                    modal.hide();
                    
                    // Reset form
                    this.reset();
                    
                    // Show success message (except for edit form)
                    if (formElement.id !== 'editUserForm' && data.message) {
                        alert(data.message);
                    }
                    
                    // Refresh page for password reset and add user
                    if (formElement.id === 'resetPasswordForm' || formElement.id === 'addUserForm') {
                        window.location.reload();
                        return;
                    }
                    
                    // Update table content for edit form
                    if (data.html) {
                        const tableContainer = document.querySelector('.table-responsive');
                        tableContainer.outerHTML = data.html;
                    }
                } else {
                    alert(data.message || 'An error occurred');
                }
            } catch (error) {
                console.error('Error:', error);
                alert(`An error occurred: ${error.message}`);
            }
        });
    }

    // Reset password modal handler
    const resetPasswordModal = document.getElementById('resetPasswordModal');
    if (resetPasswordModal) {
        resetPasswordModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const userId = button.getAttribute('data-user-id');
            document.getElementById('reset_user_id').value = userId;
        });
    }

    // Edit modal handler
    const editModal = document.getElementById('editUserModal');
    if (editModal) {
        editModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            
            // Extract data from data attributes
            const userId = button.getAttribute('data-user-id');
            const firstName = button.getAttribute('data-first-name');
            const lastName = button.getAttribute('data-last-name');
            const email = button.getAttribute('data-email');
            const role = button.getAttribute('data-role');

            // Populate the form fields
            document.getElementById('edit_user_id').value = userId;
            document.getElementById('edit_first_name').value = firstName;
            document.getElementById('edit_last_name').value = lastName;
            document.getElementById('edit_email').value = email;
            document.getElementById('edit_role').value = role;
        });
    }

    // Initialize form handlers
    const forms = {
        'addUserForm': 'addUserModal',
        'editUserForm': 'editUserModal',
        'resetPasswordForm': 'resetPasswordModal'
    };

    // Initialize all form handlers
    Object.entries(forms).forEach(([formId, modalId]) => {
        const form = document.getElementById(formId);
        if (form) {
            // Remove any existing event listeners
            const newForm = form.cloneNode(true);
            form.replaceWith(newForm);
            handleFormSubmit(newForm, modalId);
        }
    });
});
</script>