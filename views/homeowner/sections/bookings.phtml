<?php
require_once __DIR__ . '/../../../models/Booking.php';
require_once __DIR__ . '/../../../models/User.php';
require_once __DIR__ . '/../../../models/ChargePoint.php';

$user = User::fromSession();
$bookings = Booking::getAllForHomeOwnerId($user->id);

?>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fs-4 fw-bold mb-0">Manage Bookings</h2>
</div>

<!-- Bookings Table -->
<div class="table-responsive">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Booking ID</th>
                <th>User</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Status</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($bookings as $booking):
                $user = User::getById($booking->user_id);
                $chargePoint = ChargePoint::getById($booking->charge_point_id);
            ?>
                <tr>
                    <td>#<?= htmlspecialchars($booking->booking_id) ?></td>
                    <td><?= htmlspecialchars($user ? $user->firstName . ' ' . $user->lastName : 'Unknown User') ?></td>
                    <td><?= $booking->start_time->format('Y-m-d H:i') ?></td>
                    <td><?= $booking->end_time->format('Y-m-d H:i') ?></td>
                    <td>
                        <?php
                        $statusClass = match ($booking->status->value) {
                            'approved' => 'bg-success',
                            'denied' => 'bg-danger',
                            'pending' => 'bg-warning',
                            default => 'bg-secondary'
                        };
                        ?>
                        <span class="badge <?= $statusClass ?>">
                            <?= ucfirst(htmlspecialchars($booking->status->value)) ?>
                        </span>
                    </td>
                    <td>BHD <?= number_format($booking->total_price ?? 0, 3) ?></td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <?php if ($booking->status === BookingStatus::Pending): ?>
                                <button type="button" class="btn btn-outline-success approve-btn" data-id="<?= $booking->booking_id ?>" title="Approve">
                                    <i class="fa-solid fa-check"></i>
                                </button>
                                <button type="button" class="btn btn-outline-danger deny-btn" data-id="<?= $booking->booking_id ?>" title="Deny">
                                    <i class="fa-solid fa-times"></i>
                                </button>
                            <?php else: ?>
                                <button type="button" class="btn btn-outline-secondary" disabled>
                                    <i class="fa-solid fa-lock"></i>
                                </button>
                            <?php endif; ?>
                        </div>
                    </td>
                </tr>
            <?php endforeach; ?>
            <?php if (empty($bookings)): ?>
                <tr>
                    <td colspan="7" class="text-center py-4">
                        <p class="text-muted mb-0">No bookings found</p>
                    </td>
                </tr>
            <?php endif; ?>
        </tbody>
    </table>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Approve button click
        document.querySelectorAll('.approve-btn').forEach(button => {
            button.addEventListener('click', function () {
                const bookingId = this.dataset.id;
                updateBookingStatus(bookingId, 'approved');
            });
        });

        // Deny button click
        document.querySelectorAll('.deny-btn').forEach(button => {
            button.addEventListener('click', function () {
                const bookingId = this.dataset.id;
                updateBookingStatus(bookingId, 'denied');
            });
        });

        // Function to handle status update via AJAX
        function updateBookingStatus(bookingId, status) {
            fetch('admin.php', {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `form_id=updateBookingStatus&booking_id=${bookingId}&status=${status}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    const row = document.querySelector(`button[data-id='${bookingId}']`).closest('tr');
                    const statusBadge = row.querySelector('.badge');
                    statusBadge.className = `badge bg-${status}`;
                    statusBadge.textContent = ucfirst(status);
                    row.querySelector('.btn-group').innerHTML = `
                        <button type="button" class="btn btn-outline-secondary" disabled>
                            <i class="fa-solid fa-lock"></i>
                        </button>
                    `;
                } else {
                    alert(data.message);
                }
            })
            .catch(error => alert('Error: ' + error));
        }

        // Capitalize the first letter of the string (helper function)
        function ucfirst(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }
    });
</script>
